name: Publish to Hackage
description: Publish Haskell packages to Hackage

branding:
  icon: 'upload'
  color: 'green'

inputs:
  hackageServer:
    description: 'URL to the Hackage server'
    required: false
    default: 'http://hackage.haskell.org'

  hackageToken:
    description: 'Authentication token for Hackage'
    required: true

  candidate:
    description: Whether to upload the package as a candidate
    required: false
    default: 'true'

  packagesPath:
    description: 'Path that contains package tarballs'
    required: false
    default: dist-newstyle/sdist/

  docsPath:
    description: 'Path that contains packages documentation tarballs'
    required: false
    default: ''

runs:
  using: composite
  steps:
    # reuse built-in FormData when `actions/github-script` uses node 18?
    # https://github.com/actions/github-script/issues/310
    # https://nodejs.org/dist/latest-v18.x/docs/api/globals.html#class-formdata
    -
      uses: actions/setup-node@v3
      with: { node-version: 16 }
    -
      run: npm install node-fetch
      working-directory: ${{ github.action_path }}
      shell: bash
    -
      uses: actions/github-script@v6
      with:
        script: |
          const fetchModule = await import(
            '${{ github.action_path }}/node_modules/node-fetch/src/index.js'
          )
          const { FormData, fileFrom } = fetchModule

          // https://github.com/actions/toolkit/issues/1124#issuecomment-1305836110
          const inputs = ${{ toJSON(inputs) }}
          const script = require('${{ github.action_path }}/upload-hackage.js')
          await script({ inputs, core, glob, fetch: fetchModule.default, require, FormData, fileFrom })
